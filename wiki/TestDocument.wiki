#summary Deliverable 3

= Test Documentation for the Third Deliverable =


== Interface ==
For the second deliverable this is for the interface part: 

Using the Main class runs the interface part. This part was coded with eclipse in the package com.cpsc219g10.view. So the easiest way is to use eclipse. 
You can test this interface by using quit, rules of the game and the credits with “?”. 

"New" and "Score" have to be implemented

Working classes are:
 * HomePanel = done
 * RulesPanel = done
 * Window = done 
 * ZContainer = done

In progress: 
 * GamePanel = need to be done
 * PlaceBoatPanel = need to be done

== Boats ==


Working methods are:
 * setPostion = done
 * Boat = done
In progress: 
 * isMe = done
BoatTest
Boat test is a simple test that ensures a boat object can be created, and that the position of the boat can be set and altered.
The output should be simply a print out of the boat's stats, followed by a length print out, matching the length of the boat.
The BoatTest class need only be run along with the boat class.

== Player ==


Working methods are:
 * getNam) = done
 * setName = done
In progress: 
 * attack = done

== Board ==


Working methods are:
 * setOwner = done
 * Board = done
 * getSquare = done
 * addBoat = true
 * targetSquare = true
In progress: 
 * Everything should be set for the Board Class
BoardTest:
	The BoardTest is a little more involved. It generates a board and all 5 boat objects, then adds the boats to the board. It will then print out the board as a text. 
	
	After this it goes through and attacks every other space on the board. Printing out the board afterwards as well.
	You should be able to view the position of each boat on the grid and compare it to the two different boards. The positions and orientations should match up. 

The BoardTest class has to run along with the Board class as well, however it must also have the the BoatClass present as well. 